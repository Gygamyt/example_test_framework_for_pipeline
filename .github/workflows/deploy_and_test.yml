name: Deploy and Test

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Проверка репозитория с сайтом
      - name: Checkout site repository
        uses: actions/checkout@v3
        with:
          repository: Gygamyt/example_site_for_pipeline
          path: site

      # Шаг 2: Сборка и запуск контейнера с сайтом
      - name: Build and run website container
        run: |
          docker build -t site_image:latest ./site
          docker run -d --name site_container -p 8000:8000 site_image:latest

      # Шаг 3: Проверка репозитория с тестами
      - name: Checkout test framework repository
        uses: actions/checkout@v3
        with:
          repository: Gygamyt/example_test_framework_for_pipeline
          path: test-framework

      # Шаг 4: Сборка Docker-образа для тестов
      - name: Build test framework Docker image
        run: |
          cd test-framework
          docker build -t test_framework_image:latest .
        env:
          DOCKER_BUILDKIT: 1

      # Шаг 5: Запуск смоук-тестов
      - name: Run smoke tests
        run: |
          docker run --network="host" --name test_framework_container -v ${{ github.workspace }}/test-framework/reports:/app/playwright-report test_framework_image:latest --grep "smoke" --reporter=html

      # Шаг 6: Ожидание завершения смоук-тестов
      - name: Wait for smoke tests to complete
        run: |
          docker wait test_framework_container

      # Шаг 7: Копирование и переименование отчетов смоук-тестов в папку docs
      - name: Copy and rename smoke test reports to docs folder
        run: |
          mkdir -p playwright-reports/smoke
          docker cp test_framework_container:/app/playwright-report ./playwright-reports/smoke
          cp ./playwright-reports/smoke/index.html reports-repo/docs/smoke-results.html
          docker rm -f test_framework_container || true

      # Шаг 8: Сохранение отчетов смоук-тестов как артефактов
      - name: Upload smoke test reports
        uses: actions/upload-artifact@v3
        with:
          name: smoke-reports
          path: ./playwright-reports/smoke

      # Шаг 9: Запуск санити-тестов
      - name: Run sanity tests
        run: |
          docker run --network="host" --name test_framework_container -v ${{ github.workspace }}/test-framework/reports:/app/playwright-report test_framework_image:latest --grep "sanity" --reporter=html

      # Шаг 10: Ожидание завершения санити-тестов
      - name: Wait for sanity tests to complete
        run: |
          docker wait test_framework_container

      # Шаг 11: Копирование и переименование отчетов санити-тестов в папку docs
      - name: Copy and rename sanity test reports to docs folder
        run: |
          mkdir -p playwright-reports/sanity
          docker cp test_framework_container:/app/playwright-report ./playwright-reports/sanity
          cp ./playwright-reports/sanity/index.html reports-repo/docs/sanity-results.html
          docker rm -f test_framework_container || true

      # Шаг 12: Сохранение отчетов санити-тестов как артефактов
      - name: Upload sanity test reports
        uses: actions/upload-artifact@v3
        with:
          name: sanity-reports
          path: ./playwright-reports/sanity

      # Шаг 13: Проверка репозитория для отчетов
      - name: Checkout reports repository
        uses: actions/checkout@v3
        with:
          repository: Gygamyt/example_reports_gh_pages
          token: ${{ secrets.GH_PAT }}
          path: reports-repo

      # Шаг 14: Коммит и пуш отчетов
      - name: Commit and push reports
        run: |
          cd reports-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update reports"
          git push

      # Шаг 15: Генерация ссылки на опубликованные отчеты для смоук-тестов
      - name: Generate smoke test GitHub Pages URL
        id: smoke-page-url
        run: |
          echo "GITHUB_SMOKE_PAGES_URL=https://Gygamyt.github.io/example_reports_gh_pages/smoke-results.html" >> $GITHUB_ENV

      # Шаг 16: Генерация ссылки на опубликованные отчеты для санити-тестов
      - name: Generate sanity test GitHub Pages URL
        id: sanity-page-url
        run: |
          echo "GITHUB_SANITY_PAGES_URL=https://Gygamyt.github.io/example_reports_gh_pages/sanity-results.html" >> $GITHUB_ENV

      # Шаг 17: Вывод ссылки на опубликованные отчеты для смоук-тестов
      - name: Print smoke test GitHub Pages URL
        run: |
          echo "Smoke test reports are published at ${{ env.GITHUB_SMOKE_PAGES_URL }}"

      # Шаг 18: Вывод ссылки на опубликованные отчеты для санити-тестов
      - name: Print sanity test GitHub Pages URL
        run: |
          echo "Sanity test reports are published at ${{ env.GITHUB_SANITY_PAGES_URL }}"
